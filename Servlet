import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
@WebServlet("/StudentDetailsServlet")
public class StudentDetailsServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        String operation = request.getParameter("operation");
        String usn = request.getParameter("usn");
        // Database connection details
        String jdbcUrl = "jdbc:mysql://localhost:3306/java";
        String dbUser = "root";
        String dbPassword = "";
        try {
            // Load JDBC driver
            Class.forName("com.mysql.jdbc.Driver");
            // Establish database connection
            Connection connection = DriverManager.getConnection(jdbcUrl, dbUser, dbPassword);
            switch (operation) {
                case "insert":
                    // Insert operation
                    String insertSql = "INSERT INTO stud (usn,name,gender,age) VALUES (?,?,?,?)";
                    PreparedStatement insertStatement = connection.prepareStatement(insertSql);
                    insertStatement.setString(1, usn);
                    insertStatement.setString(2, request.getParameter("name"));
                    insertStatement.setString(3, request.getParameter("gender"));
                    insertStatement.setString(4, request.getParameter("age"));
                    insertStatement.executeUpdate();
                    out.println("<h2>Data inserted successfully</h2>");
                    insertStatement.close();
                    break;
                case "update":
                    // Update operation
                    String updateSql = "UPDATE stud SET name=? WHERE usn=?";
                    PreparedStatement updateStatement = connection.prepareStatement(updateSql);
                    updateStatement.setString(1, request.getParameter("name"));
                    updateStatement.setString(2, usn);

                    if (updateStatement.executeUpdate() > 0) {
                        out.println("<h2>Data updated successfully</h2>");
                    } else {
                        out.println("<h2>Invalid USN</h2>");
                    }
                    updateStatement.close();
                    break;
                case "delete":
                    // Delete operation
                    String deleteSql = "DELETE FROM stud WHERE usn=?";
                    PreparedStatement deleteStatement = connection.prepareStatement(deleteSql);
                    deleteStatement.setString(1, usn);

                    if (deleteStatement.executeUpdate() > 0) {
                        out.println("<h2>Data deleted successfully</h2>");
                    } else {
                        out.println("<h2>Invalid USN</h2>");
                    }
                    deleteStatement.close();
                    break;
                case "extract":
                    // Extract operation
                    String selectSql = "SELECT * FROM stud WHERE usn=?";
                    PreparedStatement selectStatement = connection.prepareStatement(selectSql);
                    selectStatement.setString(1, usn);
                    ResultSet resultSet = selectStatement.executeQuery();
                    if (resultSet.next()) {
                        out.println("<h2>Student Details</h2>");
                        out.println("<p><strong>USN:</strong> " + resultSet.getString("usn") + "</p>");
                        out.println("<p><strong>Name:</strong> " + resultSet.getString("name") + "</p>");
                        out.println("<p><strong>Gender:</strong> " + resultSet.getString("gender") + "</p>");
                        out.println("<p><strong>Age:</strong> " + resultSet.getString("age") + "</p>");
                    } else {
                        out.println("<p style='color: red;'>Invalid USN. Student not found.</p>");
                    }
                    // Close resources
                    resultSet.close();
                    selectStatement.close();
                    break;
                default:
                    out.println("<h2>Invalid operation</h2>");
            }
            // Close connection
            connection.close();
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }
}









//Html

<!DOCTYPE html>
<html>
<head>
<title>Student Database Operations</title>
</head>
<body>

<h2>Insert/Update Student</h2>
<form action="Newfile1.jsp" method="post">
<input type="hidden" name="operation" value="insert">
USN: <input type="text" name="usn" required>
Name: <input type="text" name="name" required>
Gender: <input type="text" name="gender" required>
Age: <input type="text" name="age" required>
<input type="submit" value="Insert">
</form>

<br>

<h2>Delete Student</h2>
<form action="Newfile1.jsp" method="post">
<input type="hidden" name="operation" value="delete">
USN: <input type="text" name="usn" required>
<input type="submit" value="Delete">
</form>

<br>

<h2>Extract Student Details</h2>
<form action="Newfile1.jsp" method="post">
<input type="hidden" name="operation" value="extract">
USN: <input type="text" name="usn" required>
<input type="submit" value="Extract">
</form>

<br>

<h2>Update Student Details</h2>
<form action="Newfile1.jsp" method="post">
<input type="hidden" name="operation" value="update">
USN: <input type="text" name="usn" required>
New Name: <input type="text" name="name" required>
<input type="submit" value="Update">
</form>

</body>
</html>
